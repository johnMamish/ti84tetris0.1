
.nolist 
    #include "ti83plus.inc"
.list

.org $9d95 - 2
.db t2ByteTok, tAsmCmp

    ld hl, _start_string
    bcall(_putS)
    
    ret

seed_rng:
	ld a, e
	ld (_num), a
	ld a, d
	ld (_num + 1), a
	ld a, c
	ld (_num + 2), a
	ld a, b
	ld (_num + 3), a
	ret

;generate random number and return it in bcde <msb> - <lsb>
;uses an xnor linear feedback shift register with taps at bits 31, 21, 1, and 0
;NB!!!!!: (where bit 31 is lsb (bit 0 of e))
rng:
	;load global var "_num" into bcde.
	ld a, (_num)
	ld e, a
	ld a, (_num + 1)
	ld d, a
	ld a, (_num + 2)
	ld c, a
	ld a, (_num + 3)
	ld b, a
	
	;use register a to hold the bit to shift into the top.
	ld h, e
	;shift
	ld a, h		;get bit 31 in a's lsb
	ld h, d
	srl h
	srl h		;bit 21 in h's lsb
	xor h		;xnor
	xor 1
	
	ld h, b
	srl h
	srl h
	srl h
	srl h
	srl h
	srl h		;bit 1 in h's lsb
	xor h
	xor 1
	srl h		;bit 0 in h's lsb
	xor h
	xor 1
	
	;shift a into 32 bits.
	srl a
	rr b
	rr c
	rr d
	rr e
	
	;load it into the random number
	ld a, e
	ld (_num), a
	ld a, d
	ld (_num + 1), a
	ld a, c
	ld (_num + 2), a
	ld a, b
	ld (_num + 3), a
	ret

_start_string:
	.db "rng test\n"
	.db "press enter to advance\n\0"

_num:
	.dw 0, 0
.end
.end
